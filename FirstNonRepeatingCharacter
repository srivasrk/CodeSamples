//C# Find First Non Repeating Character - Code Fights

/*
Note: Write a solution that only iterates over the string once 
and uses O(1) additional memory, since this is what you would 
be asked to do during a real interview.

Given a string s, find and return the first instance of a 
non-repeating character in it. 
If there is no such character, return '_'.

Example

For s = "abacabad", the output should be
firstNotRepeatingCharacter(s) = 'c'.

There are 2 non-repeating characters in the string: 'c' and 'd'. Return c since it appears in the string first.

For s = "abacabaabacaba", the output should be
firstNotRepeatingCharacter(s) = '_'.

There are no characters in this string that do not repeat.
*/

char firstNotRepeatingCharacter(string s) {
    Dictionary<char, List<int>> map = new Dictionary<char, List<int>>();
    
    for (int i = 0; i < s.Length; i++){
        if (map.ContainsKey(s[i])){
            map[s[i]].Add(i);
        } else {
            map.Add(s[i], new List<int>{i});
        }
    }
    
    int minIndex = int.MaxValue;
    
    foreach (List<int> l in map.Values){
        if (l.Count == 1){
            minIndex = Math.Min(minIndex, l[0]);
        }
    }
        
    if (minIndex < s.Length){
        return s[minIndex];
    } else {
        return '_';
    }

}

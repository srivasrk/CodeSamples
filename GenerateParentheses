/*
Given n pairs of parentheses, write a function to generate all combinations of well-formed parentheses.

For example, given n = 3, a solution set is:
[
  "((()))",
  "(()())",
  "(())()",
  "()(())",
  "()()()"
]
*/

public class Solution {
    public IList<string> GenerateParenthesis(int n) {
        var result = new List<string>();
        Generate(result, "",0, 0, n);
        return result;
    }
    
    private void Generate(IList<string> result, string s, int open, int close, int max) {
        if (s.Length == (max*2)) {
            result.Add(s);
            return;
        }
        
        if (open < max) {
            Generate(result, s + "(", open + 1, close, max);
        }
        
        if (close < open) {
            Generate(result, s + ")", open, close + 1, max);
        }        
    }
}

//C# Climbing Stairs

/*
You are climbing a stair case. It takes n steps to reach to the top.

Each time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top?

Note: Given n will be a positive integer.
*/

//There are two solutions in this file.

//Recursive
public class Solution {
    public int ClimbStairs(int n) {
        
        if (n == 1) {
            return 1;
        } else if (n == 2) {
            return 2;
        } else {
            return (ClimbStairs(n - 1) + ClimbStairs(n - 2));
        }        
    }
}

//Iterative
public class Solution {
    public int ClimbStairs(int n) {
        int count1 = 1;
        int count2 = 1;
        int temp = 1;
        
        for (int i = 2; i <= n; i++){
            temp = count2;
            count2 = count2 + count1;
            count1 = temp;
        }
        
        return count2;
    }
}

//C# Convert Sorted Array To Binary Search Tree

/*

Given an array where elements are sorted in ascending order, convert it to a height balanced BST.

*/

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left;
 *     public TreeNode right;
 *     public TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public TreeNode SortedArrayToBST(int[] nums) {
        
        return CreateSortedArrayToBST(nums, 0, nums.Length - 1);
        
    }
    
    public TreeNode CreateSortedArrayToBST(int[] nums, int start, int end){

        if (start > end){
            return null;
            
        }
        int mid = (start + (end - start)/2);
        
        TreeNode root = new TreeNode(nums[mid]);
        root.left = CreateSortedArrayToBST(nums, start, mid - 1);
        root.right = CreateSortedArrayToBST(nums, mid + 1, end);
        
        return root;
    }
}

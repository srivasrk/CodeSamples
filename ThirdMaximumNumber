//C# 3rd maximum number

/*
Given a non-empty array of integers, return the third maximum number in this array. If it does not exist, return the maximum number. The time complexity must be in O(n).

Example 1:
Input: [3, 2, 1]

Output: 1

Explanation: The third maximum is 1.
Example 2:
Input: [1, 2]

Output: 2

Explanation: The third maximum does not exist, so the maximum (2) is returned instead.
Example 3:
Input: [2, 2, 3, 1]

Output: 1

Explanation: Note that the third maximum here means the third maximum distinct number.
Both numbers with value 2 are both considered as second maximum.
*/

public class Solution {
    public int ThirdMax(int[] nums) {
        
        if (nums.Length < 1){
            return -1;
        }
        
        int max1 = int.MinValue;
        int max2 = int.MinValue;
        int max3 = int.MinValue;
        
        for (int i = 0; i < nums.Length; i++){
            if ((nums[i] == max1) || (nums[i] == max2) || (nums[i] == max3)){
                continue;
            }
            
            if (nums[i] > max1){
                max3 = max2;
                max2 = max1;
                max1 = nums[i];
            } else if (nums[i] > max2){
                max3 = max2;
                max2 = nums[i];
            } else if (nums[i] > max3){
                max3 = nums[i];
            }
        }
        
        if (max3 == int.MinValue) {
            return max1;   
        }
        return max3;
        
    }
}

/*

A message containing letters from A-Z is being encoded to numbers using the following mapping:

'A' -> 1
'B' -> 2
...
'Z' -> 26
Given a non-empty string containing only digits, determine the total number of ways to decode it.

Example 1:

Input: "12"
Output: 2
Explanation: It could be decoded as "AB" (1 2) or "L" (12).

Example 2:

Input: "226"
Output: 3
Explanation: It could be decoded as "BZ" (2 26), "VF" (22 6), or "BBF" (2 2 6).
*/

//Solution 1: Recursion O(2^n)

public class Solution {
    public int NumDecodings(string s) {
        if (s.Length == 0) {
            return 0;
        }
        
        return Decode(s, 0);
    }
    
    private int Decode(string s, int i) {
        if (s.Length == i) {
            return 1;
        }
        
        if (s[i] == '0') {
            return 0;
        }
         
        int res = Decode(s, i + 1);
        
        if ((i < s.Length - 1) && 
            ((s[i] == '1') || ((s[i] == '2') && (s[i+1] < '7')))) {
            res = res + Decode(s, i + 2);
        }
        
        return res;   
    }   
}

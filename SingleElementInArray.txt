//C# Single Element in Array

/*
Given a sorted array consisting of only integers where every element appears twice except for one element which appears once. Find this single element that appears only once.

Example 1:
Input: [1,1,2,3,3,4,4,8,8]
Output: 2
Example 2:
Input: [3,3,7,7,10,11,11]
Output: 10
Note: Your solution should run in O(log n) time and O(1) space.
*/

public class Solution {
    
    public int FindSingleElement(int[] nums, int start, int end){
        
        if (start < end){
            int middle = (end + start)/2;
            
            if (middle % 2 == 0){
                if (nums[middle] == nums[middle+1]){
                    return FindSingleElement(nums, middle+2, end);
                } else if (nums[middle] == nums[middle-1]){
                    return FindSingleElement(nums, start, middle - 1);
                } else {
                    return nums[middle];
                }
                
            } else {
                if (nums[middle-1] == nums[middle]){
                    return FindSingleElement(nums, middle+1, end);
                } else {
                    return FindSingleElement(nums, start, middle - 1);
                }
            }
            
        }
        return nums[start];
        
    }
    
    public int SingleNonDuplicate(int[] nums) {
        return FindSingleElement(nums, 0, nums.Length-1);
        
    }
}

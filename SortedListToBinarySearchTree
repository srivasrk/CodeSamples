//C# Sorted List To Binary Search Tree

/*
Given a singly linked list where elements are sorted in ascending order, 
convert it to a height balanced BST.
*/

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     public int val;
 *     public ListNode next;
 *     public ListNode(int x) { val = x; }
 * }
 */
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left;
 *     public TreeNode right;
 *     public TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    
    ListNode list;
    
    public TreeNode SortedListToBST(ListNode head) {
                
        list = head;
        int n = 0;        
        ListNode p = head;
        
        while(p != null){
            p = p.next;
            n++;
        }
                
        return CreateBSTFromSortedList(0, n - 1);
    }
    
    private TreeNode CreateBSTFromSortedList(int start, int end){
        if (start > end){
                return null;
        }
        
        int mid = start + ((end - start)/2);        
        
        TreeNode left = CreateBSTFromSortedList(start, mid - 1);  
        
        TreeNode parent = new TreeNode(list.val);
        list = list.next;
        
        parent.left = left;
        parent.right = CreateBSTFromSortedList(mid + 1, end);
        
        return parent;        
    }
    
}

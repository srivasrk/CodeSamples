//C# Balanced Binary Tree

/*
Given a binary tree, determine if it is height-balanced.

For this problem, a height-balanced binary tree is defined 
as a binary tree in which the depth of the two subtrees of every 
node never differ by more than 1.
*/

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left;
 *     public TreeNode right;
 *     public TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public bool IsBalanced(TreeNode root) {
        return (MaxDepth(root) != -1);
    }
    
    private int MaxDepth(TreeNode root){
        if (root == null) {
            return 0;
        }
        
        int left = MaxDepth(root.left);
        
        if (left == -1) {
            return -1;
        }
        
        int right = MaxDepth(root.right);
        
        if (right == -1){
            return -1;
        }
        
        if (Math.Abs(left - right) <= 1){
            return (Math.Max(left, right) + 1);
        } else {
            return -1;
        }
    }
}

//C# Construct Binary Tree from Inorder and Postorder Traversal

/*
Given inorder and postorder traversal of a tree, construct the binary tree.

Note:
You may assume that duplicates do not exist in the tree.
*/

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left;
 *     public TreeNode right;
 *     public TreeNode(int x) { val = x; }
 * }
 */
 
public class Solution {
    public TreeNode BuildTree(int[] inorder, int[] postorder) {
        return CreateTree(inorder, postorder, 0, inorder.Length - 1, 0, postorder.Length - 1)       ;
    }
    
    public TreeNode CreateTree(int[] inorder, int[] postorder, int istart, int iend, int pstart, int pend)
    {
        if (istart > iend){
            return null;
        }
        
        TreeNode root = new TreeNode(postorder[pend]);
        
        int pos = 0;
        
        for (int index = istart; index <= iend; index++){
            if (postorder[pend] == inorder[index]){
                pos = index;
                break;
            }
        }
        
        root.left = CreateTree(inorder, postorder, istart, pos-1, pstart, pstart+pos-istart-1);
        root.right = CreateTree(inorder, postorder, pos+1, iend, pend-iend+pos, pend-1);
        return root;
    }    
}

//C# Rotate array by k steps in place

/*
Rotate an array of n elements to the right by k steps.

For example, with n = 7 and k = 3, the array [1,2,3,4,5,6,7] is rotated to [5,6,7,1,2,3,4].
*/

public class Solution {
    public void Rotate(int[] nums, int k) {
        
        if ((k == 0) || (nums.Length == 0)){
            return;
        }
        
        if (k > nums.Length){
            k = k % nums.Length;   
        }
        
        Reverse(nums, 0, nums.Length - 1);
        Reverse(nums, 0, k-1);
        Reverse(nums, k, nums.Length-1);
    }
    
    public void Reverse(int[] nums, int start, int end){
        int temp;
        
        while (start < end){
            temp = nums[start];
            nums[start] = nums[end];
            nums[end] = temp;
            start++;
            end--;
        }
    }
}

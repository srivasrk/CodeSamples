//C# Remove K From List - Code Fights

/*
Note: Try to solve this task in O(n) time using O(1) additional space, 
where n is the number of elements in the list, since this is what you'll 
be asked to do during an interview.

Given a singly linked list of integers l and an integer k, remove all 
elements from list l that have a value equal to k.

Example
For l = [3, 1, 2, 3, 4, 5] and k = 3, the output should be
removeKFromList(l, k) = [1, 2, 4, 5];
For l = [1, 2, 3, 4, 5, 6, 7] and k = 10, the output should be
removeKFromList(l, k) = [1, 2, 3, 4, 5, 6, 7].*/

// Definition for singly-linked list:
// class ListNode<T> {
//   public T value { get; set; }
//   public ListNode<T> next { get; set; }
// }
//
ListNode<int> removeKFromList(ListNode<int> l, int k) {
           
    while ((l != null) && (l.value == k)){
        l = l.next;
    }
    
    ListNode<int> p = l;
    
    while ((p != null) && (p.next != null) ){
        if (p.next.value == k){
            p.next = p.next.next;    
            
            if (p == null){
                return l;
            }
        } else {
            p = p.next;            
        }                              
    }
    
    return l;
}

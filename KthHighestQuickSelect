//C# Quick Select Kth Highes element

/*
Find the kth largest element in an unsorted array. Note that it is the kth largest element in the sorted order, not the kth distinct element.

For example,
Given [3,2,1,5,6,4] and k = 2, return 5.

Note: 
You may assume k is always valid, 1 ≤ k ≤ array's length.
*/

public class Solution {
    public int FindKthLargest(int[] nums, int k) {
        int size = nums.Length;
        int index = QuickSelect(nums, 0, size-1, size-k+1);
        return nums[index];
    }
    
    private void Swap (int[] nums, int i, int j){
        int t = nums[i];
        nums[i] = nums[j];
        nums[j] = t;
    }
    
    private int QuickSelect(int[] nums, int low, int high, int k){
        
        int i = low;
        int j = high;
        int pivot = nums[high];
        
        while (i < j){
            if (nums[i] > pivot){
                j--;
                Swap(nums, i, j);
            } else {
                i++;
            }
        }
        
        Swap(nums, i, high);
        
        int count = i - low + 1;
        
        if (count == k){
            return i;
        } else if (count < k){
            return QuickSelect(nums, i + 1, high, k-count);
        } else {
            return QuickSelect(nums, low, i - 1, k);
        }
    }
}

/*
Given a binary tree, return the inorder traversal of its nodes' values.

Example:

Input: [1,null,2,3]
   1
    \
     2
    /
   3

Output: [1,3,2]
*/

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left;
 *     public TreeNode right;
 *     public TreeNode(int x) { val = x; }
 * }
 */
 
 // Solution 1: Iterative
public class Solution {
    public IList<int> InorderTraversal(TreeNode root) {
        
        var l = new List<int>();
        
        var s = new Stack<TreeNode>();
        var curr = root;
        
        while ((curr != null) || (s.Count() > 0)) {
                        
            while(curr != null) {
                s.Push(curr);
                curr = curr.left;
            }
            
            curr = s.Pop();
            l.Add(curr.val);
            curr = curr.right;
        }
        
        return l;
    }
    
}

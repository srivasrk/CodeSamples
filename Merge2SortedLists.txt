//C# merge 2 sorted lists

/*
Merge two sorted linked lists and return it as a new list. The new list should be made by splicing together the nodes of the first two lists.
*/

//There are two solutions in this file.

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     public int val;
 *     public ListNode next;
 *     public ListNode(int x) { val = x; }
 * }
 */
 
//Recursive solution

public class Solution {
    public ListNode MergeTwoLists(ListNode l1, ListNode l2) {
        
        if (l1 == null){
            return l2;
        }
        
        if (l2 == null){
            return l1;
        }
        
        if (l1.val > l2.val){
            l2.next = MergeTwoLists(l1, l2.next);
            return l2;
        } else {
            l1.next = MergeTwoLists(l1.next, l2);
            return l1;
        }
        
    }
}
 
 
//Another solution
public class Solution {
    public ListNode MergeTwoLists(ListNode l1, ListNode l2) {
        
        ListNode head = null;
        if (l1 == null){
            return l2;
        }
        if (l2 == null){
            return l1;
        }
        
        
        if (l1.val < l2.val){
            head = l1;
            l1 = l1.next;
        } else {
            head = l2;
            l2 = l2.next;
        }
        
        ListNode tail = head;
        
        while((l1 != null) && (l2 != null)){
            if (l1.val < l2.val){
                tail.next = l1;
                l1 = l1.next;
            } else {
                tail.next = l2;
                l2 = l2.next;
            }
            
            tail = tail.next;
        }
        
        if (l2 != null){
            tail.next = l2;
        } else {
            tail.next = l1;
        }
        
        return head;
        
    }
}

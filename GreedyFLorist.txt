//c#
/*
You and  friends want to buy  flowers. Each flower  has some cost . The florist is greedy and wants to maximize his number of new customers, so he increases the sale price of flowers for repeat customers; more precisely, if a customer has already purchased  flowers, price  for  is .

Find and print the minimum cost for your group to purchase  flowers.

Note: You can purchase the flowers in any order.

Input Format

The first line contains two integers,  (number of flowers to purchase) and  (the size of your group of friends, including you). 
The second line contains  space-separated positive integers describing the cost () for each flower  .

Constraints

Output Format

Print the minimum cost for buying  flowers.

Sample Input 0

3 3
2 5 6
Sample Output 0

13
Sample Input 1

3 2
2 5 6
Sample Output 1

15
Explanation

Sample Case 0: 
There are  flowers and  people in your group. Each person buys one flower and the sum of prices paid is dollars, so we print .

Sample Case 1: 
There are  flowers and  people in your group. The first person purchases  flowers,  and , in order of decreasing price; this means they buy the more expensive flower first at price  and the less expensive flower second at price . The second person buys the most expensive flower at price . We print the sum of these purchases (), which is .
*/

/* Sample program illustrating input/output methods */
using System;
using System.Collections.Generic;
using System.IO;
class Solution {
    
   static int GetBestCost(int[] Cost, int numFriends){
       
       int round = 0;
       int result = 0;
       
       for (int index1 = Cost.Length - 1; index1 >= 0; index1 = index1 - numFriends ){
            round ++;
           for (int index2 = index1; (index2 >= 0) && (index2 > (index1 - numFriends)); index2--){
               result = result + (Cost[index2] * round);
           }
       }
       
       return result;
   }

   static void Main(String[] args) {
      int NumFlowersRequired, NumFriends;
      string NK = Console.ReadLine();
      string[] NandK = NK.Split(new Char[] {' ', '\t', '\n'});
      NumFlowersRequired = Convert.ToInt32(NandK[0]);
      NumFriends = Convert.ToInt32(NandK[1]);
      
      int [] Cost = new int [NumFlowersRequired];
      
      string numbers = Console.ReadLine(); 
      string[] split = numbers.Split(new Char[] {' ', '\t', '\n'});
      
      int i = 0;

      foreach (string s in split){
         if( s.Trim() != ""){
            Cost[i++] = Convert.ToInt32(s);
         }
      }   
      
      Array.Sort(Cost);
       
      int result = GetBestCost(Cost, NumFriends);
      Console.WriteLine(result);
   }
}

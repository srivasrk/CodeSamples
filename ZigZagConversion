/*
The string "PAYPALISHIRING" is written in a zigzag pattern on a given number of rows like this: (you may want to display this pattern in a fixed font for better legibility)

P   A   H   N
A P L S I I G
Y   I   R
And then read line by line: "PAHNAPLSIIGYIR"

Write the code that will take a string and make this conversion given a number of rows:

string convert(string s, int numRows);

Example 1:
Input: s = "PAYPALISHIRING", numRows = 3
Output: "PAHNAPLSIIGYIR"

Example 2:
Input: s = "PAYPALISHIRING", numRows = 4
Output: "PINALSIGYAHRPI"
Explanation:

P     I    N
A   L S  I G
Y A   H R
P     I
*/

/*
/*n=numRows
Δ=2n-2    1                           2n-1                         4n-3
Δ=        2                     2n-2  2n                    4n-4   4n-2
Δ=        3               2n-3        2n+1              4n-5       .
Δ=        .           .               .               .            .
Δ=        .       n+2                 .           3n               .
Δ=        n-1 n+1                     3n-3    3n-1                 5n-5
Δ=2n-2    n                           3n-2                         5n-4
*/
*/

public class Solution {
    public string Convert(string s, int numRows) {
        var arrayOfStrings = new StringBuilder[numRows];
        int len = s.Length;
        int indexOfS = 0;
        
        
        for (int indexOfArray = 0; indexOfArray < numRows; indexOfArray++) {
            arrayOfStrings[indexOfArray] = new StringBuilder();
        }
        
        while (indexOfS < len) {
        
            //vertically down (ie 1.2.3...n-1.n)
            for (int indexOfArray = 0; (indexOfArray < numRows) && (indexOfS < len); indexOfArray++){
                arrayOfStrings[indexOfArray].Append(s[indexOfS]);
                indexOfS++;
            }
            
            //diagonally up (ie n-1.n-2...2n-2)
            for (int indexOfArray = numRows - 2; (indexOfArray >= 1) && (indexOfS < len); indexOfArray--) {
                arrayOfStrings[indexOfArray].Append(s[indexOfS]);
                indexOfS++;
            }
        }
        

        for (int indexOfArray = 1; indexOfArray < numRows; indexOfArray++) {
            arrayOfStrings[0].Append(arrayOfStrings[indexOfArray]);
        }
        
        return arrayOfStrings[0].ToString();
    }
}

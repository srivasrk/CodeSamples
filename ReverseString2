/*
Given a string and an integer k, you need to reverse the first k characters for every 2k characters counting
from the start of the string. If there are less than k characters left, reverse all of them. If there are less 
than 2k but greater than or equal to k characters, then reverse the first k characters and left the other as 
original.

Example:
Input: s = "abcdefg", k = 2
Output: "bacdfeg"

Restrictions:
The string consists of lower English letters only.
Length of the given string and k will in the range [1, 10000]
*/

public class Solution {
    
    private string Reverse(string input, int k) {
               
        char[] s = input.ToCharArray();
        int right = k - 1;
        int left = 0;
        
        if (right >= s.Length) {
            right = s.Length - 1;
        }
                
        while (left < right) {
            var c = s[left];
            s[left] = s[right];
            s[right] = c;
            
            left++;
            right--;            
        }
        
        return new String(s);
        
    }
    
    public string ReverseStr(string s, int k) {
        int i = 0;
        string result = "";
        
        for (; i + (2 * k) < s.Length; i = i + (2 * k)) {
            result = result + Reverse(s.Substring(i, 2 * k), k); 
        }
        
        result = result + Reverse(s.Substring(i, s.Length - i), k);   
        
        return result;
    }
}
